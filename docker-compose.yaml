name: fastapi_playground
services:

  backend_server:
    container_name: backend
    build: ./backend
    volumes:
      - ./backend:/app
    environment:
      - PORT=8000
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres_server
      - POSTGRES_PORT=5432
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      - postgres_server

  postgres_server:
    container_name: postgresql
    image: pgvector/pgvector:pg16
    restart: always
    ports:
     - 5432:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
     - ./init.sql:/docker-entrypoint-initdb.d/init.sql
     - db-data:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=david@email.com
      - PGADMIN_DEFAULT_PASSWORD=abcdef12345
      - PGADMIN_LISTEN_PORT=5050
      - PGADMIN_CONFIG_PROXY_X_HOST_COUNT=1
      - PGADMIN_CONFIG_PROXY_X_PREFIX_COUNT=1
    ports:
      - "5050:5050"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres_server

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - 80:8080
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend_server


volumes:
  db-data:
  pgadmin-data: